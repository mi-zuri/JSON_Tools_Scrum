name: Consistent project version
# Checks that the version in the POM file matches the Git tag.

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with 'v', e.g., v1.0.0
      - '[0-9]+.[0-9]+.[0-9]+*' # Trigger on tags like 1.0.0, 1.0.0-RC1, etc.

jobs:
  verify-version-match:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Get POM version
        id: pom_version
        run: |
          # Extracts the project version from pom.xml
          # -q is for quiet mode
          # -DforceStdout makes it print to stdout even if not a TTY
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "pom_version=$VERSION" >> $GITHUB_OUTPUT
          echo "POM Version: $VERSION"

      - name: Get Git tag
        id: git_tag
        run: |
          # GITHUB_REF_NAME contains the tag name (e.g., v1.0.0 or 1.0.0)
          TAG_NAME=${{ github.ref_name }}
          echo "git_tag_raw=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Raw Git Tag: $TAG_NAME"
          # Remove 'v' prefix if it exists, to match typical POM versions
          CLEANED_TAG_NAME="${TAG_NAME#v}"
          echo "git_tag_cleaned=$CLEANED_TAG_NAME" >> $GITHUB_OUTPUT
          echo "Cleaned Git Tag for comparison: $CLEANED_TAG_NAME"

      - name: Compare versions
        run: |
          POM_VERSION="${{ steps.pom_version.outputs.pom_version }}"
          GIT_TAG_CLEANED="${{ steps.git_tag.outputs.git_tag_cleaned }}"

          echo "Comparing POM Version ('$POM_VERSION') with Cleaned Git Tag ('$GIT_TAG_CLEANED')."

          if [ "$POM_VERSION" != "$GIT_TAG_CLEANED" ]; then
            echo "Error: POM version ($POM_VERSION) does not match Git tag ($GIT_TAG_CLEANED)."
            exit 1
          else
            echo "Success: POM version matches Git tag."
          fi